{"version":3,"sources":["libs/api.jsx","models/products.jsx","models/categories.jsx","models/cart.jsx","models/index.jsx","store.js","components/Product.jsx","components/Category.jsx","selectors/totalPrice.jsx","components/CartButton.jsx","selectors/numberOfProductsInCart.jsx","pages/ProductsPage.jsx","components/ProductExtended.jsx","pages/ProductPage.jsx","pages/CartPage.jsx","App.jsx","serviceWorker.js","index.js"],"names":["baseUrl","loadProduct","id","fetch","concat","then","r","json","createModel","loadProducts","queryParams","qs","stringify","state","list","reducers","setList","effects","dispatch","loadAll","_loadAll","Object","asyncToGenerator","regenerator_default","a","mark","_callee","rootState","_this","this","wrap","_context","prev","next","data","stop","_x","_x2","apply","arguments","loadOne","_loadOne","_callee2","product","_context2","sent","_x3","_x4","loadCategories","payload","categories","cart","products","addProduct","productId","find","quantity","push","removeProduct","filter","setQuantity","models","store","init","plugins","immerPlugin","window","connect","ownProps","addProductToCart","_ref","category","react_default","createElement","className","Link","to","src","image","alt","name","price","onClick","Category","totalPrice","reduce","p","productsQuantity","totalPriceSelector","getCategory","categoryId","ProductsPage","loadData","props","nextProps","match","url","path","params","components_CartButton","map","key","components_Product","React","Component","ProductExtended","description","ProductPage","CartPage","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","value","cartItems","item","App","es","BrowserRouter","Switch","Route","component","exact","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44129fc9.chunk.js","sourcesContent":["import qs from \"qs\";\nconst baseUrl = \"https://rest-api-broot.glitch.me/api/taraschuiko\";\n\nexport function checkStatus(response) {\n  if (response.ok) {\n    return response;\n  } else {\n    throw new Error(\"server error\");\n  }\n}\n\n// export function loadProducts() {\n//   return fetch(`${baseUrl}/products`).then(r => r.json());\n// }\n\nexport function loadProducts(queryParams) {\n  return fetch(`${baseUrl}/products?${qs.stringify(queryParams)}`).then(r =>\n    r.json()\n  );\n}\n\nexport function loadProduct(id) {\n  return fetch(`${baseUrl}/products/${id}`).then(r => r.json());\n}\n\nexport function loadCategories() {\n  return fetch(`${baseUrl}/categories`).then(r => r.json());\n}\n\nexport function loadCategory(id) {\n  return fetch(`${baseUrl}/categories/${id}`).then(r => r.json());\n}\n","import { loadProducts, loadProduct } from \"../libs/api\";\n\nfunction createModel(loadProducts) {\n  return {\n    state: { list: [] },\n    reducers: {\n      setList(state, list) {\n        state.list = list;\n      }\n    },\n    effects: dispatch => ({\n      async loadAll(queryParams, rootState) {\n        loadProducts(queryParams).then(data => this.setList(data));\n      },\n      async loadOne(id, rootState) {\n        const product = await loadProduct(id);\n        this.setList([product]);\n      }\n    })\n  };\n}\n\nexport { createModel };\nexport default createModel(loadProducts);\n","import { loadCategories } from \"../libs/api\";\n\nfunction createModel(loadCategories) {\n  return {\n    state: {\n      list: []\n    },\n    reducers: {\n      setList(state, list) {\n        state.list = list;\n      }\n    },\n    effects: dispatch => ({\n      async loadAll(payload, rootState) {\n        const categories = await loadCategories();\n        this.setList(categories);\n      }\n    })\n  };\n}\n\nexport { createModel };\nexport default createModel(loadCategories);\n","export default {\n  state: {\n    products: []\n  },\n  reducers: {\n    addProduct(state, productId) {\n      const product = state.products.find(\n        product => product.productId === productId\n      );\n      if (product) {\n        product.quantity += 1;\n      } else {\n        state.products.push({ productId, quantity: 1 });\n      }\n    },\n    removeProduct(state, productId) {\n      state.products = state.products.filter(\n        product => product.productId !== productId\n      );\n    },\n    setQuantity(state, productId, quantity) {\n      let product = state.products.find(product => product.id === productId);\n      product.quantity = quantity;\n    }\n  }\n};\n","import products from \"./products\";\nimport categories from \"./categories\";\nimport cart from \"./cart\";\n\nexport default {\n  products,\n  categories,\n  cart\n};\n","import immerPlugin from \"@rematch/immer\";\nimport { init } from \"@rematch/core\";\n\nimport models from \"./models\";\n\nconst store = init({\n  models,\n  plugins: [immerPlugin()]\n});\n\nwindow.store = store;\n\nexport default store;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nexport function Product({ product, category, addProductToCart }) {\n  return (\n    <div className=\"col-3 product-card\">\n      <Link to={`/products/${product.id}`}>\n        <div>\n          <img src={product.image} alt=\"Image\" />\n          <p>{product.name}</p>\n          <p>${product.price}</p>\n        </div>\n      </Link>\n      <button onClick={addProductToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  addProductToCart: () => dispatch.cart.addProduct(ownProps.product.id)\n});\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Product);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function({ category }) {\n  return (\n    <div>\n      <li>\n        <Link to={`/categories/${category.id}`}> {category.name} </Link>\n      </li>\n    </div>\n  );\n}\n","export default function totalPrice(cart, products) {\n  return cart.products.reduce((prev, { productId, quantity }) => {\n    const product = products.find(p => p.id === productId);\n    return prev + product.price * quantity;\n  }, 0);\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport numberOfProductsInCartSelector from \"../selectors/numberOfProductsInCart\";\nimport totalPriceSelector from \"../selectors/totalPrice\";\nimport { Link } from \"react-router-dom\";\n\nexport function CartButton({ productsQuantity, totalPrice }) {\n  return (\n    <Link to=\"/cart\" className=\"cart-button col-12\">\n      You have {productsQuantity} products in your cart. The total price is\n      {\" $\"}\n      {totalPrice}\n    </Link>\n  );\n}\n\nconst mapState = state => ({\n  productsQuantity: numberOfProductsInCartSelector(state.cart),\n  totalPrice: totalPriceSelector(state.cart, state.products.list)\n});\nexport default connect(mapState)(CartButton);\n","export default function numberOfProductsInCart(cart) {\n  return cart.products.reduce((prev, product) => prev + product.quantity, 0);\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Product from \"../components/Product\";\nimport Category from \"../components/Category\";\nimport CartButton from \"../components/CartButton\";\nimport cart from \"../models/cart\";\n\nfunction getCategory(product, categories) {\n  return categories.find(category => product.categoryId === category.id);\n}\n\nclass ProductsPage extends React.Component {\n  componentDidMount() {\n    this.loadData(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.match.url !== this.props.match.url) {\n      this.loadData(nextProps);\n    }\n  }\n\n  loadData(props) {\n    let queryParams = {};\n    if (props.match.path === \"/categories/:id\") {\n      queryParams = { filter: { categoryId: props.match.params.id } };\n    }\n    props.loadProducts(queryParams);\n    props.loadCategories();\n  }\n\n  render() {\n    return (\n      <section>\n        <div className=\"container\">\n          <div className=\"row\">\n            <CartButton />\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-lg-2\">\n              <h4>Categories</h4>\n              <ul className=\"categories\">\n                {this.props.categories.map(category => (\n                  <Category key={category.id} category={category} />\n                ))}\n              </ul>\n            </div>\n            <div className=\"col-12 col-lg-10\">\n              <h2>Products</h2>\n              <div className=\"row\">\n                {this.props.products.map(product => (\n                  <Product\n                    key={product.id}\n                    product={product}\n                    category={getCategory(product, this.props.categories)}\n                    addProductToCart={cart.addProduct}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapState = state => ({\n  products: state.products.list,\n  categories: state.categories.list\n});\n\nconst mapDispatch = ({ products, categories }) => ({\n  loadProducts: products.loadAll,\n  loadCategories: categories.loadAll\n});\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(ProductsPage);\n","import React from \"react\";\n\nexport default function({ product }) {\n  return (\n    <section>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-2\">\n            <img\n              src={product.image}\n              alt=\"Image\"\n              className=\"product-extended-image\"\n            />\n          </div>\n          <div className=\"col-10\">\n            <h2>{product.name}</h2>\n            <p>{product.description}</p>\n            <h3>${product.price}</h3>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport ProductExtended from \"../components/ProductExtended\";\n\nclass ProductPage extends React.Component {\n  componentDidMount() {\n    this.props.loadOne(this.props.match.params.id);\n  }\n\n  render() {\n    return this.props.product ? (\n      <ProductExtended product={this.props.product} />\n    ) : (\n      <p>Warning</p>\n    );\n  }\n}\n\nconst mapState = (state, props) => ({\n  product: state.products.list.find(\n    product => product.id === props.match.params.id\n  ),\n  productId: props.match.params.id\n});\n\nconst mapDispatch = ({ products: { loadOne } }) => ({\n  loadOne\n});\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(ProductPage);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction getProductById(products, id) {\n  return products.find(product => product.id === id);\n}\n\n// function CartItem(product, quantity) {\n//   return <div />;\n// }\n\nexport class CartPage extends React.Component {\n  componentDidMount() {\n    this.props.loadProducts();\n  }\n  render() {\n    return (\n      <section>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <h1>Cart</h1>\n              {this.props.cartItems.map(item => (\n                <div key={item.productId}>\n                  {getProductById(this.props.products, item.productId).name}\n                  {\" - \"}\n                  {item.quantity}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapState = state => ({\n  products: state.products.list,\n  cartItems: state.cart.products\n});\n\nconst mapDispatch = ({ products }) => ({\n  loadProducts: products.loadAll\n});\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(CartPage);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport ProductsPage from \"./pages/ProductsPage\";\nimport ProductPage from \"./pages/ProductPage\";\nimport CartPage from \"./pages/CartPage\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div>\n            <header>\n              <div className=\"container\">\n                <div className=\"row\">\n                  <Link to=\"/\" className=\"col-12 col-sm-3\">\n                    <img\n                      src=\"../../data/img/logo.png\"\n                      alt=\"Shop\"\n                      className=\"header-logo\"\n                    />\n                  </Link>\n                </div>\n              </div>\n            </header>\n            <Switch>\n              <Route path=\"/cart\" component={CartPage} />\n              <Route path=\"/products/:id\" component={ProductPage} />\n              <Route path=\"/categories/:id\" component={ProductsPage} />\n              <Route exact path=\"/\" component={ProductsPage} />\n            </Switch>\n            <footer>\n              <div className=\"container\">\n                <div className=\"row\">\n                  <p className=\"col-12\">&copy; 2018</p>\n                </div>\n              </div>\n            </footer>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}