{"version":3,"sources":["libs/api.jsx","models/products.jsx","models/categories.jsx","models/cart.jsx","models/index.jsx","store.js","components/Product.jsx","components/Category.jsx","selectors/numberOfProductsInCart.jsx","selectors/totalPrice.jsx","components/CartButton.jsx","selectors/categoryForProductSelector.jsx","pages/ProductsPage.jsx","components/ProductExtended.jsx","pages/ProductPage.jsx","components/CartItem.jsx","pages/CartPage.jsx","App.jsx","serviceWorker.js","index.js"],"names":["baseUrl","process","loadProduct","id","fetch","concat","then","r","json","createModel","loadProducts","queryParams","qs","stringify","state","list","reducers","setList","effects","dispatch","loadAll","_loadAll","Object","asyncToGenerator","regenerator_default","a","mark","_callee","rootState","_this","this","wrap","_context","prev","next","data","stop","_x","_x2","apply","arguments","loadOne","_loadOne","_callee2","product","_context2","sent","_x3","_x4","loadCategories","payload","categories","cart","items","addProduct","item","find","quantity","push","removeProduct","productId","filter","setQuantity","STORAGE_KEY","models","products","store","init","plugins","immerPlugin","redux","initialState","middlewares","action","console","log","result","getState","subscribe","cartState","localStorage","setItem","JSON","saveStateToLocalStorage","window","connect","ownProps","addProductToCart","_ref","category","react_default","createElement","className","Link","to","src","image","alt","name","price","onClick","Category","numberOfProductsInCart","reduce","totalPrice","Number","toFixed","productsQuantity","numberOfProductsInCartSelector","totalPriceSelector","getCategoryForProduct","c","categoryId","ProductsPage","loadData","props","nextProps","match","url","path","params","components_CartButton","map","key","components_Product","categoryForProductSelector","React","Component","ProductExtended","description","ProductPage","_ref2","_ref3","addOne","removeOne","remove","CartPage","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","value","_this$props","cartItems","components_CartItem","App","es","BrowserRouter","Switch","Route","component","exact","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ca3211ee.chunk.js","sourcesContent":["import qs from \"qs\";\nconst baseUrl = process.env.REACT_APP_API_URL;\n\nexport function checkStatus(response) {\n  if (response.ok) {\n    return response;\n  } else {\n    throw new Error(\"server error\");\n  }\n}\n\n// export function loadProducts() {\n//   return fetch(`${baseUrl}/products`).then(r => r.json());\n// }\n\nexport function loadProducts(queryParams) {\n  return fetch(`${baseUrl}/products?${qs.stringify(queryParams)}`).then(r =>\n    r.json()\n  );\n}\n\nexport function loadProduct(id) {\n  return fetch(`${baseUrl}/products/${id}`).then(r => r.json());\n}\n\nexport function loadCategories() {\n  return fetch(`${baseUrl}/categories`).then(r => r.json());\n}\n\nexport function loadCategory(id) {\n  return fetch(`${baseUrl}/categories/${id}`).then(r => r.json());\n}\n","import { loadProducts, loadProduct } from \"../libs/api\";\n\nfunction createModel(loadProducts) {\n  return {\n    state: { list: [] },\n    reducers: {\n      setList(state, list) {\n        state.list = list;\n      }\n    },\n    effects: dispatch => ({\n      async loadAll(queryParams, rootState) {\n        loadProducts(queryParams).then(data => this.setList(data));\n      },\n      async loadOne(id, rootState) {\n        const product = await loadProduct(id);\n        this.setList([product]);\n      }\n    })\n  };\n}\n\nexport { createModel };\nexport default createModel(loadProducts);\n","import { loadCategories } from \"../libs/api\";\n\nfunction createModel(loadCategories) {\n  return {\n    state: {\n      list: []\n    },\n    reducers: {\n      setList(state, list) {\n        state.list = list;\n      }\n    },\n    effects: dispatch => ({\n      async loadAll(payload, rootState) {\n        const categories = await loadCategories();\n        this.setList(categories);\n      }\n    })\n  };\n}\n\nexport { createModel };\nexport default createModel(loadCategories);\n","// export default {\n//   state: {\n//     products: []\n//   },\n//   reducers: {\n//     addProduct(state, productId) {\n//       const product = state.products.find(\n//         product => product.productId === productId\n//       );\n//       if (product) {\n//         product.quantity += 1;\n//       } else {\n//         state.products.push({ productId, quantity: 1 });\n//       }\n//     },\n//     removeProduct(state, productId) {\n//       state.products = state.products.filter(\n//         product => product.productId !== productId\n//       );\n//     },\n//     setQuantity(state, productId, quantity) {\n//       let product = state.products.find(product => product.id === productId);\n//       product.quantity = quantity;\n//     }\n//   }\n// };\n\n// const STORAGE_KEY = \"cart\";\n\n// export function loadStateFromLocalStorage() {\n//   let storageData = localStorage.getItem(STORAGE_KEY);\n//   return JSON.parse(storageData) || { items: [] };\n// }\n\n// export function saveStateToLocalStorage(store) {\n//   const cartState = store.getState().cart;\n//   localStorage.setItem(STORAGE_KEY, JSON.stringify(cartState));\n// }\n\nconst cart = {\n  state: {\n    items: []\n  },\n  reducers: {\n    addProduct(state, product) {\n      const item = state.items.find(item => item.product.id === product.id);\n\n      if (item) {\n        item.quantity += 1;\n      } else {\n        state.items.push({\n          product: product,\n          quantity: 1\n        });\n      }\n    },\n    removeProduct(state, productId) {\n      state.items = state.items.filter(item => item.product.id !== productId);\n    },\n    setQuantity(state, productId, quantity) {\n      if (quantity === 0) {\n        state.items = state.items.filter(item => item.product.id !== productId);\n      } else {\n        const item = state.items.find(item => item.product.id === productId);\n        item.quantity = quantity;\n      }\n    }\n  }\n};\n\nexport default cart;\n\nconst STORAGE_KEY = \"cart\";\n\nexport function loadStateFromLocalStorage() {\n  const storageData = localStorage.getItem(STORAGE_KEY);\n  return JSON.parse(storageData) || cart.state;\n}\n\nexport function saveStateToLocalStorage(store) {\n  const cartState = store.getState().cart;\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(cartState));\n}\n","import products from \"./products\";\nimport categories from \"./categories\";\nimport cart from \"./cart\";\n\nexport default {\n  products,\n  categories,\n  cart\n};\n","import immerPlugin from \"@rematch/immer\";\nimport { init } from \"@rematch/core\";\n\nimport models from \"./models\";\n\nimport {\n  loadStateFromLocalStorage,\n  saveStateToLocalStorage\n} from \"./models/cart\";\n\nconst logger = store => next => action => {\n  console.log(\"dispatching\", action);\n  let result = next(action);\n  console.log(\"next state\", store.getState());\n  return result;\n};\n\nconst store = init({\n  models,\n  plugins: [immerPlugin()],\n  redux: {\n    initialState: {\n      // cart: loadStateFromLocalStorage()\n    },\n    middlewares: [logger]\n  }\n});\n\nstore.subscribe(() => {\n  saveStateToLocalStorage(store);\n});\n\nwindow.store = store;\n\nexport default store;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nexport function Product({ product, category, addProductToCart }) {\n  return (\n    <div className=\"col-12 col-sm-6 col-md-3 product-card\">\n      <Link to={`/products/${product.id}`}>\n        <div>\n          <img src={product.image} alt=\"Product\" />\n          <p>{product.name}</p>\n          <p>${product.price}</p>\n        </div>\n      </Link>\n      <button onClick={addProductToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  addProductToCart: () => dispatch.cart.addProduct(ownProps.product)\n});\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Product);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function({ category }) {\n  return (\n    <div>\n      <li>\n        <Link to={`/categories/${category.id}`}> {category.name} </Link>\n      </li>\n    </div>\n  );\n}\n","export default function numberOfProductsInCart(cart) {\n  return cart.items.reduce((prev, item) => prev + item.quantity, 0);\n}\n","export default function totalPrice(cart, products) {\n  const price = cart.items.reduce((prev, { product, quantity }) => {\n    return prev + product.price * quantity;\n  }, 0);\n\n  return Number(price).toFixed(2);\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport numberOfProductsInCartSelector from \"../selectors/numberOfProductsInCart\";\nimport totalPriceSelector from \"../selectors/totalPrice\";\n\nexport function CartButton({ productsQuantity, totalPrice }) {\n  return (\n    <Link to=\"/cart\" className=\"cart-button col-12\">\n      You have {productsQuantity} products in your cart. The total price is\n      {\" $\"}\n      {totalPrice}\n    </Link>\n  );\n}\n\nconst mapState = state => ({\n  productsQuantity: numberOfProductsInCartSelector(state.cart),\n  totalPrice: totalPriceSelector(state.cart)\n});\n\nexport default connect(mapState)(CartButton);\n","export default function getCategoryForProduct(product, categories) {\n  return categories.find(c => c.id === product.categoryId);\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Product from \"../components/Product\";\nimport Category from \"../components/Category\";\nimport CartButton from \"../components/CartButton\";\nimport categoryForProductSelector from \"../selectors/categoryForProductSelector\";\n\nclass ProductsPage extends React.Component {\n  componentDidMount() {\n    this.loadData(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.match.url !== this.props.match.url) {\n      this.loadData(nextProps);\n    }\n  }\n\n  loadData(props) {\n    let queryParams = {};\n    if (props.match.path === \"/categories/:id\") {\n      queryParams = { filter: { categoryId: props.match.params.id } };\n    }\n    props.loadProducts(queryParams);\n    props.loadCategories();\n  }\n\n  render() {\n    return (\n      <section>\n        <div className=\"container\">\n          <div className=\"row\">\n            <CartButton />\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 col-lg-2\">\n              <h4>Categories</h4>\n              <ul className=\"categories\">\n                {this.props.categories.map(category => (\n                  <Category key={category.id} category={category} />\n                ))}\n              </ul>\n            </div>\n            <div className=\"col-12 col-lg-10\">\n              <h2>Products</h2>\n              <div className=\"row\">\n                {this.props.products.map(product => (\n                  <Product\n                    key={product.id}\n                    product={product}\n                    category={categoryForProductSelector(\n                      product,\n                      this.props.categories\n                    )}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapState = state => ({\n  products: state.products.list,\n  categories: state.categories.list\n});\n\nconst mapDispatch = ({ products, categories }) => ({\n  loadProducts: products.loadAll,\n  loadCategories: categories.loadAll\n});\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(ProductsPage);\n","import React from \"react\";\n\nexport default function({ product }) {\n  return (\n    <section>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <img\n              src={product.image}\n              alt=\"Image\"\n              className=\"product-extended-image\"\n            />\n          </div>\n          <div className=\"col-9\">\n            <h2>{product.name}</h2>\n            <p>{product.description}</p>\n            <h3>${product.price}</h3>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport ProductExtended from \"../components/ProductExtended\";\n\nclass ProductPage extends React.Component {\n  componentDidMount() {\n    this.props.loadOne(this.props.match.params.id);\n  }\n\n  render() {\n    return this.props.product ? (\n      <ProductExtended product={this.props.product} />\n    ) : (\n      <p>Warning</p>\n    );\n  }\n}\n\nconst mapState = (state, props) => ({\n  product: state.products.list.find(\n    product => product.id === props.match.params.id\n  ),\n  productId: props.match.params.id\n});\n\nconst mapDispatch = ({ products: { loadOne } }) => ({\n  loadOne\n});\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(ProductPage);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nexport function CartItem({ product, quantity, addOne, removeOne, remove }) {\n  return (\n    <div className=\"cartItem\">\n      <Link to={`/products/${product.id}`}>{product.name}</Link>\n      <button onClick={removeOne}>-</button>\n      {quantity}\n      <button onClick={addOne}>+</button>\n      <button onClick={remove}>x</button>\n    </div>\n  );\n}\n\nconst mapDispatch = ({ cart }, { quantity, product }) => ({\n  addOne: () => cart.setQuantity(product.id, quantity + 1),\n  removeOne: () => cart.setQuantity(product.id, quantity - 1),\n  remove: () => cart.removeProduct(product.id)\n});\nexport default connect(\n  null,\n  mapDispatch\n)(CartItem);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport CartItem from \"./../components/CartItem\";\n\nimport numberOfProductsInCartSelector from \"../selectors/numberOfProductsInCart\";\nimport totalPriceSelector from \"../selectors/totalPrice\";\n\nfunction getProductById(products, id) {\n  return products.find(product => product.id === id);\n}\n\nexport class CartPage extends React.Component {\n  render() {\n    const { cartItems, productsQuantity, totalPrice } = this.props;\n    return (\n      <section>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <h1>Cart</h1>\n              <p>\n                You have {productsQuantity} products in your cart. The total\n                price is\n                {\" $\"}\n                {totalPrice}\n              </p>\n              {cartItems.map(item => (\n                <CartItem\n                  key={item.product.id}\n                  product={item.product}\n                  quantity={item.quantity}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapState = ({ cart }) => ({\n  cartItems: cart.items,\n  productsQuantity: numberOfProductsInCartSelector(cart),\n  totalPrice: totalPriceSelector(cart)\n});\n\nexport default connect(mapState)(CartPage);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport ProductsPage from \"./pages/ProductsPage\";\nimport ProductPage from \"./pages/ProductPage\";\nimport CartPage from \"./pages/CartPage\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div>\n            <header>\n              <div className=\"container\">\n                <div className=\"row\">\n                  <Link to=\"/\" className=\"col-12 col-sm-3\">\n                    <img\n                      src=\"../../data/img/logo.png\"\n                      alt=\"Shop\"\n                      className=\"header-logo\"\n                    />\n                  </Link>\n                </div>\n              </div>\n            </header>\n            <Switch>\n              <Route path=\"/cart\" component={CartPage} />\n              <Route path=\"/products/:id\" component={ProductPage} />\n              <Route path=\"/categories/:id\" component={ProductsPage} />\n              <Route exact path=\"/\" component={ProductsPage} />\n            </Switch>\n            <footer>\n              <div className=\"container\">\n                <div className=\"row\">\n                  <p className=\"col-12\">&copy; 2018</p>\n                </div>\n              </div>\n            </footer>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}